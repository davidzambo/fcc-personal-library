doctype html
html(lang="en")
    head
        meta(charset="utf-8")
        meta(name="viewport" content="width=device-width, initial-scale=1.0")
        meta(property="og:url" content="http://www.dcmf.hu:3200")
        meta(property="og:type" content="website")
        meta(property="og:title" content="Issue tracker")
        meta(property="og:description" content="A freeCodeCamp Information Security project")
        meta(property="og:image:width" content="1460")
        meta(property="og:image:height" content="973")
        meta(property="og:image" content="http://www.dcmf.hu:3200/images/issue-tracker.png")
        link(rel="shortcut icon" href="https://www.dcmf.hu/favicon.jpg" type="image/x-icon")
        link(rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" integrity="sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB" crossorigin="anonymous")
        link(href="/css/styles.css" rel="stylesheet")
        link(rel="stylesheet" href="https://use.fontawesome.com/releases/v5.2.0/css/all.css" integrity="sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ" crossorigin="anonymous")
        title Issue Tracker
    body
        div.container-fluid.d-flex.flex-column.justify-content-between
            main
            div.row.py-4.justify-content-center
                div.col-12.p-2.py-md-4.text-center
                    h1.d-inline.m-auto Issue Tracker
                        sup
                            i.fas.fa-info-circle.ml-2.text-info#description
            div.row.px-md-4.text-white#project-description
                div.col-12
                    h3 User stories
                    ul
                        li Prevent cross site scripting (XSS attack).
                        li I can POST /api/issues/{projectname} with form data containing required issue_title, issue_text, created_by, and optional assigned_to and status_text. The object saved (and returned) will include all of those fields (blank for optional no input) and also include created_on(date/time), updated_on(date/time), open(boolean, true for open, false for closed), and _id.
                        li I can PUT /api/issues/{projectname} with a _id and any fields in the object with a value to object said object. Returned will be 'successfully updated' or 'could not update '+_id. This should always update updated_on. If no fields are sent return 'no updated field sent'.
                        li I can DELETE /api/issues/{projectname} with a _id to completely delete an issue. If no _id is sent return '_id error', success: 'deleted '+_id, failed: 'could not delete '+_id.
                        li I can GET /api/issues/{projectname} for an array of all issues on that specific project with all the information for each issue as was returned when posted.
                        li I can filter my get request by also passing along any field and value in the query(ie. /api/issues/{project}?open=false). I can pass along as many fields/values as I want.
                div.col-12.col-md-6
                    h3 Example usage
                    code GET /api/issues/:projectname
                    br
                    code GET /api/issues/apitest
                    br
                    code GET /api/issues/apitest?issue_title=
                    br
                    code GET /api/issues/apitest?issue_text=
                    br
                    code GET /api/issues/apitest?created_by=
                    br
                    code GET /api/issues/apitest?assigned_to=
                    br
                    code GET /api/issues/apitest?status_text=
                    br
                    code GET /api/issues/apitest?_id=
                    br
                    code GET /api/issues/apitest?open=
                    br
                    code POST /api/issues/apitest
                    br
                    code PUT /api/issues/apitest
                    br
                    code DELETE /api/issues/apitest
                div.col-12.col-md-6
                    h3 Example response
                    pre
                        code #{JSON.stringify({"issue": {"assigned_to": "","status_text": "","open": true,"_id": "5b8788f103fb032296ceb254","issue_title": "freeCodeCamp","issue_text": "issue tracker testing","created_by": "DCMF","created_on": "2018-08-30T06:04:33.705Z","updated_on": "2018-08-30T06:04:33.705Z"}}, null, 4)}
            block content
            footer.row.bg-dark.text-white.p-3.mt-4
                a.col-12(href="https://www.dcmf.hu/" target="_blank") codedBy
                    img(src="https://www.dcmf.hu/images/dcmf-letters.png" alt="DCMF logo")
        script(src="https://code.jquery.com/jquery-3.3.1.min.js")
        script(src="/js/scripts.js")
        script.
            (function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r;
                i[r] = i[r] || function () {
                    (i[r].q = i[r].q || []).push(arguments)
                }, i[r].l = 1 * new Date();
                a = s.createElement(o),
                    m = s.getElementsByTagName(o)[0];
                a.async = 1;
                a.src = g;
                m.parentNode.insertBefore(a, m)
            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

            ga('create', 'UA-105430750-1', 'auto');
            ga('send', 'pageview');
